# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: 'install'

- script: |
   wget https://github.com/github/codeql-action/releases/latest/download/codeql-runner-linux
   chmod +x codeql-runner-linux
   
  displayName: 'Get latest CodeQL package. Install on Agent.'

- script: |
   ./codeql-runner-linux init \
   --repository sq2907/vulnerable-node \
   --github-url https://github.com \
   --github-auth $(GitHub Token) \
  displayName: 'Initialize CodeQL Executable and create a CodeQL database' 

- script: |
   ./codeql-runner-linux analyze \
   --repository sq2907/vulnerable-node \
   --github-url https://github.com \
   --github-auth $(GitHub Token) \
   --commit $(Build.SourceVersion) \
   --ref $(Build.SourceBranch)
  displayName: 'Populate the CodeQL runner databases, analyze them, and upload the results to GitHub.'

jobs:
- job: Job_1
  displayName: Agent job 1
  steps:
  - checkout: self
    clean: False
  - task: SonarQubePrepare@4
    displayName: Prepare analysis on SonarQube
    inputs:
      SonarQube: 27b9ac7e-ef90-4857-8996-25be173a1da0
      projectKey: webgoat_sonarqube
      projectName: webgoat_sonarqube
  - task: MSBuild@1
    displayName: Build solution **/*.sln
  - task: SonarQubeAnalyze@4
    displayName: Run Code Analysis
  - task: SonarQubePublish@4
    displayName: Publish Quality Gate Result
